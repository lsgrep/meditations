[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/from-the-instant-to-eternity/index.html",
    "href": "posts/from-the-instant-to-eternity/index.html",
    "title": "From the instant to eternity",
    "section": "",
    "text": "Always had a fond inclination towards meditation. I have been practicing meditation on and off for a couple years. I even came up with my own methods of meditation, maybe that is for another post.\nIf I remember correctly I think Andrew Huberman once said that meditation is a special state in which you can upgrade your source code of your brain/consciousness.\nThere are many things we don’t know enough about, and mind/brain is one of them.\nI tried Bhagavad Gita a couple of times but got intimidated by the names and characters as they are all Hindi. It is hard to memorize long names as you have no idea how the Hindi names are constructed. Somehow I pulled through, and finished the book gladly.\nThere are a lot can be learned from the Gita. What struck me the most is the immortality of self .\nDiscourse 2, Bhagavad Gita\n\nThe self is not born nor does it ever die. Once it has been, this self will never cease to be again. Unborn, eternal, continuing from the old, the self is not killed when the body is killed\n\nDiscourse 2, Bhagavad Gita\n\nAnd as you discern your own dharma, you should not waver. For the warrio, htere can be found nothing greater than battle for the sake of dharma.\n\nThe idea is that you are immortal, thus have no fear, face your enemies, pursue your dharma.\n\nYour authority is in action alone, and never in its fruits; motive should never be in the fruits of action, nor should you cling to inaction\n\nFocus on action, not the results, live a meditative life.\nBhagavad Gita means the song of the God. It is as poetic and as beautiful as it can be. It is a book that you can read over and over again, and you will always find something new.\nAfter finishing the Gita, I started reading Meditations by Marcus Aurelius.\nMeditations is a stark contrast to Bhagavad Gita, as Marcus Aurelius is brought upon the knowledge of Greek golden age, in which logic and reason are the main pillars of the society. It also has totally different take on death, that we all die, and we might die at any given moment.\nBook 2\n\nYou may leave this life at any moment: have this possibility in your mind in all that you do or say or think.\n\nBook 3\n\nSo we must have sense of urgency, not only for the ever closer approach of death, but also because our comprehension of the world and our ability to pay proper attention will fade before we do.\n\nDeath is maybe imminent and we should take every action as the last one we can take. This brings the same liberation that Bhagavad Gita brings, although they are achieved by different angles.\nBook 4\n\nNo action should be undertaken without aim, or other than in conformity with principle affirming the art of life.\n\nBook 7\n\nRemember these two things: the action is important, the context indifferent.\n\nOne from the east and one from the west, one is spiritual, and the other is logical, and core ideas somehow converge one way or another. Both are astoundingly beautiful and full of wisdom."
  },
  {
    "objectID": "posts/setting-up-media-server-with-jellyfin/index.html",
    "href": "posts/setting-up-media-server-with-jellyfin/index.html",
    "title": "Setting up a media server with Jellyfin",
    "section": "",
    "text": "I have an Ubuntu desktop machine with an old Nvidia card. It has OKish specs, but it is a bit noisy for my liking. In short, I’ve made it into a publicly accessible Jellyfin media server with Traefik+Wireguard and moved it to the corner of my place with USB WiFi stick plugged in.\n\nWiFi\n\nYou have install kernel drivers for the WiFi stick first, and the drivers are vendor specific.\ncheck available devices\n\niwconfig\nwlp4s0 is the device name for my USB WiFi stick.\n\nbring the device up\n\nsudo ifconfig wlp4s0 up\n\ncheck available wireless networks\n\nsudo iwlist wlp4s0 scan | grep ESSID\n\nconnect to the network\n\n# generate & save password\nwpa_passphrase your-ESSID your-wifi-passphrase | sudo tee /etc/wpa_supplicant.conf\n# -B is for running things in background\nsudo wpa_supplicant -B -c /etc/wpa_supplicant.conf -i wlp4s0\n\n# get an IP address\nsudo dhclient wlp4s0\n\nAutoconnect to WiFi after reboot\n\n# crontab for the root\nsudo crontabe -u root -e\n\n# content of crontab\n# @reboot sleep 5 && /usr/local/bin/wifi.sh 2&gt;&1 &gt;&gt; /var/log/reboot.log\n#!/bin/bash\n# wifi.sh\n/usr/sbin/rfkill unblock wifi || true\n/sbin/ifconfig wlp4s0 up || true\n/sbin/wpa_supplicant -B -c /etc/wpa_supplicant.conf -i wlp4s0 || true\n/sbin/dhclient wlp4s0 || true\n\nDisable WiFi power saving\n\nDisable wifi power management directly by editing /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf and changed the value from 3 to 2, saved changes and reboot.\n\nPerformance Tweaks\n\n# To ameliorate the connection through the intel wifi card you can:\n\n# Disable 802.11n\n# Enable software encryption\n# Enable the transmission antenna aggregation\n# Disable bluetooth coexistence\n# Create a /etc/modprobe.d/iwlwifi.conf with the following content :\noptions iwlwifi 11n_disable=1\noptions iwlwifi swcrypto=1\noptions iwlwifi 11n_disable=8\noptions iwlwifi bt_coex_active=0\n\n\nRemote Desktop\nI’ve tried lots of things for remote desktop, then settled for Chrome Remote Desktop. Official docs are not so reliable, and this gist did the trick.\nHonestly I don’t use this at all, but I think it is nice to have.\n{% gist ae09f72bd5badc64d4727a0d38fc590b %} https://gist.github.com/organizm/ae09f72bd5badc64d4727a0d38fc590b\n\n\nMedia Server\n\nJellyfin is free & open source, and it is not bloated with ads. Start Jellyfin with Nvidia hardware acceleration enabled(You can check out docs for more). Docker-compose is buggy with GPUs, so I have to use command line for this. You have to install nvidia-docker2 before hand.\n\ndocker run -d \\\n --name=jellyfin \\\n -e NVIDIA_DRIVER_CAPABILITIES=all \\\n -e NVIDIA_VISIBLE_DEVICES=all \\\n --gpus all \\\n --pid host \\\n --runtime=nvidia \\\n -p 8096:8096 \\\n -p 8920:8920 \\\n -v /data/jellyfin/config:/config \\\n -v /data/jellyfin/media:/media \\\n -v /data/jellyfin/cache:/cache \\\n --restart unless-stopped \\\n jellyfin/jellyfin:unstable\nSince it is sharing(--pid host) PID namespace with host, you can run nvidia-smi on host machine directly to see if Jellyfin is using GPU when transcoding content.\n\n\n\njellyfin-nvidia\n\n\n\nRegister an OpenSubtitles.org account and install the plugin for the Jellyfin. You have to login with your account in the plugin settings page. With this you can add subtitles to your videos without too much effort.\n\n\n\nSyncing Remote Folders\nrclone is kinda aggressive, so you have to use --max-delete 0 to keep your files intact in your destination.\nrclone sync --max-delete 0 -v REMOTE_DRIVE:legal_movies movies --stats 10s\n\n\nInternet Access\nThe desktop is connected to a VPS instance with WireGuard. WireGuard is pretty easy to setup.\nHere is the Traefik configuration on the VPS instance.\nA somewhat secure Traefik frontend with automated TLS certificates.\n# docker-compose.yaml\nversion: '3.8'\n\nservices:\n  traefik:\n    image: traefik:v2.3\n    restart: always\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - \"/var/log/traefik:/var/log/traefik\"\n            # save certs so that you won't DDOS letencrypt servers after restart\n      - \"$PWD/certs:/letsencrypt\"\n      - \"/var/run/docker.sock:/var/run/docker.sock:ro\"\n      - \"$PWD/services/traefik/:/etc/traefik/\"\n\n    labels:\n      - \"traefik.enable=true\"\n      - \"traefik.http.routers.dashboard.rule=Host(`DOMAIN_FOR_DASHBOARD`)\"\n      - \"traefik.http.routers.dashboard.entrypoints=websecure\"\n      - \"traefik.http.routers.dashboard.tls.certresolver=letsencrypt\"\n      - \"traefik.http.routers.dashboard.service=api@internal\"\n\n      ### basic auth\n      - \"traefik.http.routers.dashboard.middlewares=auth\"\n            # admin admin; echo $(htpasswd -nb admin admin) | sed -e s/\\\\$/\\\\$\\\\$/g\n      - \"traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$k.B4XC1H$$s0IZDaqRa4BX0MwcMHXnD/\" \n\n      ### compression\n      - \"traefik.http.middlewares.test-compress.compress=true\"\n      - \"traefik.http.middlewares.test-compress.compress.excludedcontenttypes=text/event-stream\"\n\n      ### Security related\n      - \"traefik.http.middlewares.test-security.headers.SSLRedirect=true\"\n      #### Note that this uses SSLHost verbatim, so add the port to SSLHost if you are using an alternate port.\n      - \"traefik.http.middlewares.test-security.headers.SSLForceHost=true\"\n      #### The stsSeconds is the max-age of the Strict-Transport-Security header. If set to 0, would NOT include the header.\n      - \"traefik.http.middlewares.test-security.headers.STSSeconds=315360000\"\n      #### The stsIncludeSubdomains is set to true, the includeSubDomains directive will be\n      #### appended to the Strict-Transport-Security header.\n      - \"traefik.http.middlewares.test-security.headers.STSIncludeSubdomains=true\"\n      #### Set stsPreload to true to have the preload flag appended to the Strict-Transport-Security header.\n      - \"traefik.http.middlewares.test-security.headers.STSPreload=true\"\n      #### Set forceSTSHeader to true, to add the STS header even when the connection is HTTP.\n      - \"traefik.http.middlewares.test-security.headers.forceSTSHeader=true\"\n      #### Set frameDeny to true to add the X-Frame-Options header with the value of DENY.\n      - \"traefik.http.middlewares.test-security.headers.frameDeny=true\"\n      #### Set contentTypeNosniff to true to add the X-Content-Type-Options header with the value nosniff.\n      - \"traefik.http.middlewares.test-security.headers.contentTypeNosniff=true\"\n      #### Set browserXssFilter to true to add the X-XSS-Protection header with the value 1; mode=block.\n      - \"traefik.http.middlewares.test-security.headers.browserXSSFilter=true\"\n      ###\n      - \"traefik.http.middlewares.test-security.headers.contentSecurityPolicy=frame-ancestors 'self';\"\n      - \"traefik.http.middlewares.test-security.headers.referrerPolicy=strict-origin\"\n      - \"traefik.http.middlewares.test-security.headers.featurePolicy=microphone 'none'; geolocation 'none'\"\n\n#services/traefik/traefik.toml\n[entryPoints]\n[entryPoints.web]\naddress = \":80\"\n[entryPoints.web.http]\n[entryPoints.web.http.redirections]\n[entryPoints.web.http.redirections.entryPoint]\nto = \"websecure\"\nscheme = \"https\"\n\n[entryPoints.websecure]\naddress = \":443\"\n\n[api]\ndashboard = true\n\n[accessLog]\nfilePath = \"/var/log/traefik/access.log\"\n\n[log]\nfilePath = \"/var/log/traefik/traefik.log\"\nformat = \"json\"\nlevel = \"DEBUG\"\n\n[metrics]\n[metrics.prometheus]\n\n[providers]\n[providers.docker]\nexposedByDefault = false\n[providers.file]\ndirectory = \"/etc/traefik/dynamic/\"\n\n[certificatesResolvers.letsencrypt.acme]\n# your email address\nemail = \"\"\nstorage = \"/letsencrypt/acme.json\"\n[certificatesResolvers.letsencrypt.acme.httpChallenge]\nentryPoint = \"web\"\n# services/traefik/dynamic/custom.yml\nhttp:\n  middlewares:\n    auth:\n      basicAuth:\n        users:\n                    # admin admin; htpasswd -nb admin admin\n          - \"admin:$apr1$2p9L2YyO$6cnp6nqaF6Xgz9qdIGp/z1\" \n  routers:\n    jellyfin:\n      middlewares:\n                # extra basic auth if necessary\n        - auth\n      rule: Host(`YOUR_DOMAIN_NAME`)\n      service: tv\n      tls:\n        certresolver: letsencrypt\n\n  services:\n    tv:\n      loadBalancer:\n        servers:\n                    # wireguard IP address of media server\n          - url: http://WIREGUARD_IP_OF_MEDIA_SERVER:8096 \nAfter setting this up, you can visit your Jellyfin from anywhere you like."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "make a greater mistake",
    "section": "",
    "text": "From the instant to eternity\n\n\n\n\n\n\n\nlinux\n\n\n\n\n\n\n\n\n\n\n\nAug 14, 2023\n\n\nYusup\n\n\n\n\n\n\n  \n\n\n\n\nSetting up a media server with Jellyfin\n\n\n\n\n\n\n\nlinux\n\n\n\n\n\n\n\n\n\n\n\nJan 25, 2022\n\n\nYusup\n\n\n\n\n\n\nNo matching items"
  }
]